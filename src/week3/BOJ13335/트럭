import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.LinkedList;
import java.util.Queue;
import java.util.StringTokenizer;

public class Main {
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());

		// 트럭 갯수
		int n = Integer.parseInt(st.nextToken());

		// 다리 길이
		int w = Integer.parseInt(st.nextToken());

		// 다리 하중
		int l = Integer.parseInt(st.nextToken());

		// 트럭 무게를 저장할 배열 생성
		Queue<Integer> trucks = new LinkedList<>();

		// 다리에 올라가있는 트럭을 연산하기 위한 큐
		Queue<Integer> bridge = new LinkedList<>();

		// 시간 저장할 변수
		int time = 0;

		st = new StringTokenizer(br.readLine());
		
		// 큐에 트럭 무게 넣고
		for (int i = 0; i < n; i++) {
			trucks.offer(Integer.parseInt(st.nextToken()));
		}
		
		int weight = 0;
		
		// 다리 큐에 트럭이 없음을 체크하는 
		for (int i = 0; i < w; i++) {
			bridge.offer(0);
		}
		
		
		while(!bridge.isEmpty()) {
			
			time++;
			weight -= bridge.poll();
			
			if (!trucks.isEmpty()) {
				
				if (trucks.peek() + weight <= l) {
					
					weight += trucks.peek();
					bridge.offer(trucks.poll());
					
				} 
				
				else {
					
					bridge.offer(0);
				
				}
			}
		}
		System.out.println(time);
	}
}
